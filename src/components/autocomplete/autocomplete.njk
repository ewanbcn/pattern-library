<div class="ds_site-search  ds_autocomplete" id="site-search-autocomplete">
    <form role="search" class="ds_site-search__form">
        <label class="ds_label  visually-hidden" for="site-search" id="site-search-label">Search</label>
        <div class="visually-hidden" id="autocomplete-status" role="status" aria-atomic="true" aria-live="polite"></div>
        <div class="ds_input__wrapper  ds_input__wrapper--has-icon">
            <input
                aria-autocomplete="list"
                aria-expanded="false"
                aria-owns="autocomplete-suggestions"
                aria-popup="listbox"
                autocomplete="off"
                class="ds_input  ds_site-search__input  js-autocomplete-input"
                id="site-search"
                name="q"
                placeholder="Search"
                required=""
                role="combobox"
                type="search"
            />

            <button type="submit" class="ds_button">
                <span class="visually-hidden">Search</span>
                <svg class="ds_icon" aria-hidden="true" role="img"><use xlink:href="/assets/images/icons/icons.stack.svg#search"></use></svg>
            </button>

            <div id="autocomplete-suggestions" class="ds_autocomplete__suggestions">
                <ol class="ds_autocomplete__suggestions-list" role="listbox" aria-labelledby="site-search-label"></ol>
            </div>
        </div>
    </form>
</div>

<script>
document.addEventListener('DOMContentLoaded', () => {
    var searchElement = document.getElementById('site-search');
    var autocomplete = new window.DS.components.Autocomplete(
        document.getElementById('site-search-autocomplete'),
        '/assets/data/autocomplete-dummy-data.json#',
        {
            suggestionMappingFunction: function (suggestionsObj) {

                var responseObj = JSON.parse(suggestionsObj.response).map(suggestionsObj => ({
                    key: '',
                    displayText: suggestionsObj,
                    weight: '',
                    type: '',
                    category: ''
                }));
                var filteredResults = responseObj.filter(item => (item.displayText.toLowerCase().indexOf(searchElement.value.toLowerCase()) > -1));

                return filteredResults.slice(0,6);
            }
        }
    );

    autocomplete.init();
});
</script>
